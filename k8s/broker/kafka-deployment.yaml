apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: dev
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - image: confluentinc/cp-enterprise-kafka:latest
          name: kafka
#          readinessProbe:
#            exec:
#              command:
#                - while kafka cub kafka-ready -b kafka:9092 1 1 >/dev/null 2>&1
#                - do
#                -   sleep 3
#                - done
#                - kafka-topics --create --zookeeper $KAFKA_ZOOKEEPER_CONNECT \
#                  -replication-factor 1 --partitions 1 \
#                  --topic streaming.yerbamate.checkout.created --if-not-exists
#                - kafka-topics --create --zookeeper $KAFKA_ZOOKEEPER_CONNECT \
#                  -replication-factor 1 --partitions 1 \
#                  --topic streaming.yerbamate.checkout.updated --if-not-exists
#                - kafka-topics --create --zookeeper $KAFKA_ZOOKEEPER_CONNECT \
#                  -replication-factor 1 --partitions 1 \
#                  --topic streaming.yerbamate.payment.verified --if-not-exists
          env:
            - name: KAFKA_BROKER_ID
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: kafka_broker_id
            - name: KAFKA_ZOOKEEPER_CONNECT
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: zookeeper_url
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: kafka_listener_security_protocol_map
            - name: KAFKA_ADVERTISED_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: kafka_advertised_listeners
            - name: KAFKA_METRIC_REPORTERS
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: kafka_metric_reporters
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: kafka_offsets_topic_replication_factor
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: kafka_group_initial_rebalance_delay_ms
            - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: broker_url
            - name: CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: zookeeper_url
            - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: confluent_metrics_reporter_topic_replicas
            - name: CONFLUENT_METRICS_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: confluent_metrics_enable
            - name: CONFLUENT_SUPPORT_CUSTOMER_ID
              valueFrom:
                configMapKeyRef:
                  name: broker-configmap
                  key: confluent_support_customer_id
          ports:
            - containerPort: 9092
            - containerPort: 29092

# vim: et sw=2 ts=2 sts=2 :
